{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/editor/editor.component.ts","./src/app/components/editor/editor.component.html","./src/app/components/new-problem/new-problem.component.ts","./src/app/components/new-problem/new-problem.component.html","./src/app/components/problem-detail/problem-detail.component.ts","./src/app/components/problem-detail/problem-detail.component.html","./src/app/components/problem-list/problem-list.component.ts","./src/app/components/problem-list/problem-list.component.html","./src/app/services/collaboration.service.ts","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\n\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full' // excatly match\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id', // :id is parameter e.g. problems/1 (id=1)\n    component: ProblemDetailComponent\n  },\n  {\n    path: '**', // any other routes redirect to 'problems'\n    redirectTo: 'problems'\n  }\n];\nexport const routing = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent implements OnInit {\n  sessionId: string;\n  editor: any;\n  languages: string[] = ['Java', 'Python'];\n  language: string = 'Java';\n  output: string = '';\n  defaultContent = {\n    Java: `public class Example {\n      public static void main(String[] args) {\n        // Type your Java code here\n      }\n    }`,\n    Python: `class Solution:\n    def example():\n    # write your python code here`\n  };\n\n  constructor(\n    private collaboration: CollaborationService,\n    private route: ActivatedRoute,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.sessionId = params['id'];\n      this.initEditor();\n    });\n\n    this.editor.getSession().setMode('ace/mode/java');\n    this.editor.setValue(this.defaultContent.Java);\n    this.resetEditor();\n    this.collaboration.restoreBuffer();\n  }\n\n  initEditor() {\n    this.editor = ace.edit('editor');\n    this.editor.setTheme('ace/theme/eclipse');\n    this.resetEditor();\n    document.getElementsByTagName('textarea')[0].focus();\n    this.collaboration.init(this.editor, this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    this.editor.on('change', e => {\n      console.log('editor changes: ' + JSON.stringify(e));\n\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    });\n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode('ace/mode/' + this.language.toLowerCase());\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let user_code = this.editor.getValue();\n    console.log(user_code);\n    const data = {\n      user_code: user_code,\n      lang: this.language.toLocaleLowerCase()\n    };\n    this.dataService.buildAndRun(data).then(res => (this.output = res.text));\n  }\n}\n","<section>\n  <header class=\"editor-header\">\n    <!-- for select language-->\n    <!-- when change, call setLanguage(language)-->\n    <select\n      class=\"form-control pull-left lang-select\"\n      name=\"language\"\n      [(ngModel)]=\"language\"\n      (change)=\"setLanguage(language)\"\n    >\n      <option *ngFor=\"let language of languages\" [value]=\"language\">\n        {{ language }}\n      </option>\n    </select>\n    <!--reset button -->\n    <!-- Button trigger modal -->\n\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      data-toggle=\"modal\"\n      data-\n      target=\"#myModal\"\n    >\n      Reset\n    </button>\n    <!-- Modal -->\n\n    <div\n      class=\"modal fade\"\n      id=\"myModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-\n      labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Are you sure</h5>\n\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-\n              label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            You will lose current code in the editor, are you sure?\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-\n              dismiss=\"modal\"\n            >\n              Cancel\n            </button>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n              (click)=\"resetEditor()\"\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n  <div class=\"row\">\n    <div id=\"editor\" style=\"height: 600px; width: 1000px\"></div>\n    <div>\n      {{ output }}\n    </div>\n  </div>\n  <!-- This is the body -->\n  <footer class=\"editor-footer\">\n    <button type=\"button\" class=\"btn btn-success pull-right\" (click)=\"submit()\">\n      Submit Solution\n    </button>\n  </footer>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from 'src/app/services/data.service';\n//default problem\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.scss']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {}\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem);\n    // assign newProblem a new problem instance\n    // Otherwise newProblem have same reference as the one we added to the list\n    // then when next time add new problem, it will override the problem we have\n    // already add into the problem list.\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n}\n","<div>\n  <form #formRef=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"problemName\">Problem Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"problemName\"\n        name=\"problemName\"\n        placeholder=\"Input problem name\"\n        required\n        [(ngModel)]=\"newProblem.name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"problemDesc\">Problem Description</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"problemDesc\"\n        name=\"problemDesc\"\n        placeholder=\"Input description\"\n        required\n        [(ngModel)]=\"newProblem.desc\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"difficulty\">Difficulty</label>\n      <select\n        class=\"form-control\"\n        id=\"difficulty\"\n        name=\"difficulty\"\n        [(ngModel)]=\"newProblem.difficulty\"\n      >\n        <option *ngFor=\"let difficulty of difficulties\" [value]=\"difficulty\">\n          {{ difficulty }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary pull-right\"\n          (click)=\"addProblem()\"\n        >\n          Add problem\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.scss']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.dataService\n        .getProblem(+params['id'])\n        .then(problem => (this.problem = problem));\n    });\n  }\n}\n","<div class=\"container\" *ngIf=\"problem\">\n  <div class=\"col-sm-12 col-md-4\">\n    <div>\n      <h2>{{ problem.id }}.{{ problem.name }}</h2>\n      <p>\n        {{ problem.desc }}\n      </p>\n    </div>\n  </div>\n  <div class=\"hidden-xs col-sm-12 col-sm-8\">\n    <app-editor></app-editor>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { PROBLEMS } from '../../mock-problem';\nimport { DataService } from '../../services/data.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.scss']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.getProblems();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    this.subscriptionProblems = this.dataService\n      .getProblems()\n      .subscribe(problems => (this.problems = problems));\n  }\n\n  getProblem(id: number): Problem {\n    return this.problems.find(problem => problem.id === id);\n  }\n}\n","<div class=\"container\">\n  <app-new-problem></app-new-problem>\n  <div class=\"list-group\">\n    <a\n      class=\"list-group-item\"\n      *ngFor=\"let problem of problems\"\n      [routerLink]=\"['/problems', problem.id]\"\n    >\n      <span\n        class=\"{{\n          'pull-left badge difficulty diff-' +\n            problem.difficulty.toLocaleLowerCase()\n        }}\"\n      >\n        {{ problem.difficulty }}\n      </span>\n      <strong class=\"title\">{{ problem.id }}. {{ problem.name }}</strong>\n    </a>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n\n  constructor() {}\n\n  init(editor: any, sessionId: string): void {\n    this.collaborationSocket = io(window.location.origin, {\n      query: 'sessionId=' + sessionId\n    });\n    this.collaborationSocket.on('change', (delta: string) => {\n      console.log('collaboration: editor changes by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor\n        .getSession()\n        .getDocument()\n        .applyDeltas(delta);\n    });\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit('change', delta);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit('restoreBuffer');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { PROBLEMS } from '../mock-problem';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) {}\n\n  // getProblems(): Problem[] {\n  //   return this.problems;\n  // }\n  getProblems(): Observable<Problem[]> {\n    this.httpClient\n      .get('http://localhost:3000/api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient\n      .get(`http://localhost:3000/api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.httpClient\n      .post('http://localhost:3000/api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems;\n        return res;\n      });\n  }\n\n  private handleError(err: any): Promise<any> {\n    console.log('an error occurred', err);\n    return Promise.reject(err.body || err);\n  }\n\n  buildAndRun(data) {\n    const options = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.httpClient\n      .post('http://localhost:3000/api/v1/build_and_run', data, options)\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        return res;\n      })\n      .catch(this.handleError);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}